#!/bin/bash
GETTEXT='gettext "CNCHI_UPDATER"'
NETWORK_ALIVE=$(ping -c1 8.8.8.8 2>&1 | grep "0 received")
NOTIFIED="False"
FAILED="False"
CNCHI_STARTED="False"
CNCHI_RESTARTED="False"
NO_UPDATES="False"
CHECK_UPDATES=$(sudo checkupdates)

# Translatable Strings

NO_CONNECTION=$(${GETTEXT} "INSTALLER NOTICE:")
NO_CONNECTION_SUB=$(${GETTEXT} "You must be connected to the internet to install Antergos. Click the network icon in the top bar to configure your connection.")
INSTALLING_UPDATES=$(${GETTEXT} "Installing Updates")
INSTALLING_UPDATES_SUB=$(${GETTEXT} "Installing available updates.")
UPDATE_COMPLETE=$(${GETTEXT} "Update Complete")
UPDATE_COMPLETE_SUB=$(${GETTEXT} "Updates were installed sucessfully. Starting Cnchi...")
CHECKING_UPDATES=$(${GETTEXT} "Cnchi Automatic Updates")
CHECKING_UPDATES_SUB=$(${GETTEXT} "Checking for available updates for the Antergos Installer.")


start_cnchi () {
	sudo -E cnchi -d -v & return 0;
}

notify_user () {

        notify-send -a "Cnchi" -i "/usr/share/cnchi/data/images/antergos/antergos-icon.png" -u critical "$1" "$2"
}

if [[ "$NETWORK_ALIVE" != "" ]]; then
	start_cnchi && CNCHI_STARTED="True"
fi



run_when_connected () {

if [[ "$NETWORK_ALIVE" != "" ]]; then

	while [[ "$NETWORK_ALIVE" != "" ]];do
		if [[ ${NOTIFIED} = "False" ]]; then
			notify_user "${NO_CONNECTION}" "${NO_CONNECTION_SUB}"
			NOTIFIED="True"
		fi
		NETWORK_ALIVE=$(ping -c1 8.8.8.8 2>&1 | grep "0 received")
		sleep 5;
	done
fi



if [[ ${NETWORK_ALIVE} = '' ]]; then
	if [[ ${CNCHI_STARTED} = "True" ]]; then
		until [[ -f /tmp/.setup-running ]];do
			sleep 2;
		done
		
	fi
	notify_user "${CHECKING_UPDATES}" "${CHECKING_UPDATES_SUB}"
	sudo sed -i '1s%^%Server = http://repo.antergos.info/$repo/$arch\n%' /etc/pacman.d/antergos-mirrorlist
	sudo rm /var/lib/pacman/db.lck || true
	sudo chmod +x /usr/share/cnchi/cnchi/info.py
	sudo reflector -p http -l 50 -f 20 --save /etc/pacman.d/mirrorlist
	sudo pacman -Syy
	CNCHI_REPO_VER_FULL="$(sudo pacman -Ss '^cnchi$' | cut -s -d ' ' -f 2)"
	CNCHI_REPO_VER="${CNCHI_REPO_VER_FULL:2:1}"
	CNCHI_REPO_MINOR="${CNCHI_REPO_VER_FULL:4:1}"
	CNCHI_DEV_VER_FULL="$(sudo /usr/share/cnchi/cnchi/info.py)"
	CNCHI_DEV_VER="${CNCHI_DEV_VER_FULL:2:1}"
	CNCHI_DEV_MINOR="${CNCHI_DEV_VER_FULL:4:1}"
	echo "$CNCHI_DEV_VER $CNCHI_REPO_VER | $CNCHI_REPO_MINOR $CNCHI_DEV_MINOR"
	
	INSTALL_CNCHI="False"
	
	if [[ ${CNCHI_REPO_VER} -gt ${CNCHI_DEV_VER} ]]; then
		INSTALL_CNCHI="True"
	elif [[ ${CNCHI_REPO_MINOR} -gt ${CNCHI_DEV_MINOR} ]]; then
		INSTALL_CNCHI="True"
	fi
	
	if [[ ${INSTALL_CNCHI} = "True" ]]; then
		notify_user "${INSTALLING_UPDATES}" "${INSTALLING_UPDATES_SUB}"
		sudo killall -s 15 -w python && sudo rm /tmp/.setup-running
		sudo rm /var/lib/pacman/db.lck || true
		sudo pacman -R cnchi-dev --noconfirm || true
		sudo pacman -S --noconfirm cnchi && notify_user "${UPDATE_COMPLETE}" "${UPDATE_COMPLETE_SUB}" 
		start_cnchi && CNCHI_RESTARTED="True"
	else
		NO_UPDATES="True"
	fi
	sed -i '1d' /etc/pacman.d/antergos-mirrorlist
fi

}



run_when_connected > /tmp/pacman-boot.log 2>&1 && \
if [[ ${CNCHI_RESTARTED} = "True" ]] || [[ -f /tmp/.setup-running ]] || [[  ${NO_UPDATES} = "True" ]]; then 
	exit 0;
else
	sudo killall -s 15 -w python; sudo rm /tmp/.setup-running;  sudo -E cnchi -dv &
fi


exit 1;
