#!/bin/bash
# -*- coding: utf-8 -*-
#
#  pacman-boot
#
#  Copyright Â© 2013-2015 Antergos
#
#  This file is part of Cnchi.
#
#  Cnchi is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  Cnchi is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Cnchi; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.


TEXTDOMAIN="CNCHI_UPDATER"
GETTEXT='gettext "CNCHI_UPDATER"'
NETWORK_ALIVE=$(ping -c1 8.8.8.8 >/dev/null 2>&1; echo $?)
{ [[ -f /tmp/pacman-boot-updated ]] && NOTIFIED="True" && SCRIPT_UPDATED="True"; } || { NOTIFIED="False" && SCRIPT_UPDATED="False"; }
FAILED="False"
CNCHI_STARTED="False"
CNCHI_RESTARTED="False"
NO_UPDATES="False"
LAST_SENT=''
CNCHI_ICON="/usr/share/cnchi/data/images/antergos/antergos-icon.png"

# Translatable Strings

NO_CONNECTION=$(${GETTEXT} "INSTALLER NOTICE:")
NO_CONNECTION_SUB=$(${GETTEXT} "You must be connected to the internet to install Antergos. Click the network icon in the top bar to configure your connection.")
INSTALLING_UPDATES=$(${GETTEXT} "Installing Updates")
INSTALLING_UPDATES_SUB=$(${GETTEXT} "Installing available updates.")
UPDATE_COMPLETE=$(${GETTEXT} "Update Complete")
UPDATE_COMPLETE_SUB=$(${GETTEXT} "Updates were installed sucessfully. Starting Cnchi...")
CHECKING_UPDATES=$(${GETTEXT} "Cnchi Automatic Updates")
CHECKING_UPDATES_SUB=$(${GETTEXT} "Checking for available updates for the Antergos Installer.")
NO_UPDATES_CN=$(${GETTEXT} "Check was sucessful.")
NO_UPDATES_CN_SUB=$(${GETTEXT} "You have the latest version. You can proceed with your installation!")


start_cnchi () {
	sudo -E cnchi -d -v -s bugsnag & 
	return 0;
}

notify_user () {

	if [[ ${LAST_SENT} != '' ]]; then
		LAST_SENT=$(notify-send.sh -a "Cnchi" -i "${CNCHI_ICON}" -u critical -p -r "${LAST_SENT}" "$1" "$2")
	else
		LAST_SENT=$(notify-send.sh -a "Cnchi" -i "${CNCHI_ICON}" -u critical -p "$1" "$2")
	fi

	echo "${LAST_SENT}"
}


run_when_connected () {

if [[ "$NETWORK_ALIVE" != 0 ]] && [[ ${CNCHI_STARTED} = "False" ]]; then

	start_cnchi && CNCHI_STARTED="True"

	while [[ "$NETWORK_ALIVE" != 0 ]]; do
		if [[ ${NOTIFIED} = "False" ]]; then
			notify_user "${NO_CONNECTION}" "${NO_CONNECTION_SUB}"
			NOTIFIED="True"
		fi
		NETWORK_ALIVE=$(ping -c1 8.8.8.8 >/dev/null 2>&1; echo $?)
		sleep 2;
	done
	
fi



if [[ ${NETWORK_ALIVE} = 0 ]]; then

	if [[ ${SCRIPT_UPDATED} = "False" ]]; then
		cd /tmp
		wget http://antergos.com/pacman-boot-updated.zip && \
		unzip pacman-boot-updated.zip && \
		chmod +x pacman-boot-updated && \
		{ nohup /tmp/pacman-boot-updated & } && \
		exit
	fi

	notify_user "${CHECKING_UPDATES}" "${CHECKING_UPDATES_SUB}"
	sudo sed -i '1s%^%Server = http://repo.antergos.info/$repo/$arch\n%' /etc/pacman.d/antergos-mirrorlist
	sudo rm /var/lib/pacman/db.lck > /dev/null 2&>1
	sudo pacman -Syy
	CHECK_UPDATES=$(sudo checkupdates)
	if [[ ${CHECK_UPDATES} != '' ]]; then
		sudo chmod +x /usr/share/cnchi/cnchi/info.py
		CNCHI_REPO_VER_FULL="$(sudo pacman -Ss '^cnchi$' | cut -s -d ' ' -f 2)"
		CNCHI_REPO_VER="${CNCHI_REPO_VER_FULL:2:1}"
		CNCHI_REPO_MINOR="${CNCHI_REPO_VER_FULL:4:3}"
		CNCHI_ISO_VER_FULL="$(sudo /usr/share/cnchi/cnchi/info.py)"
		CNCHI_ISO_VER="${CNCHI_ISO_VER_FULL:2:1}"
		CNCHI_ISO_MINOR="${CNCHI_ISO_VER_FULL:4:3}"
		echo "$CNCHI_ISO_VER $CNCHI_REPO_VER | $CNCHI_REPO_MINOR $CNCHI_ISO_MINOR"
	
		INSTALL_CNCHI="False"
	
		if [[ ${CNCHI_REPO_VER} -gt ${CNCHI_ISO_VER} ]]; then
			INSTALL_CNCHI="True"
		elif [[ ${CNCHI_REPO_VER} -eq ${CNCHI_ISO_VER} ]] && [[ ${CNCHI_REPO_MINOR} -gt ${CNCHI_ISO_MINOR} ]]; then
			INSTALL_CNCHI="True"
		fi
	else
		INSTALL_CNCHI="False"
	fi
	
	if [[ ${INSTALL_CNCHI} = "True" ]]; then
		notify_user "${INSTALLING_UPDATES}" "${INSTALLING_UPDATES_SUB}"
		sudo killall -s 15 -w python && sudo rm /tmp/.setup-running
		sudo rm /var/lib/pacman/db.lck > /dev/null 2&>1
		sudo pacman -S --noconfirm --force cnchi && notify_user "${UPDATE_COMPLETE}" "${UPDATE_COMPLETE_SUB}" 
		start_cnchi && CNCHI_RESTARTED="True"
	else
		NO_UPDATES="True"
		notify_user "${NO_UPDATES_CN}" "${NO_UPDATES_CN_SUB}"
	fi
	sudo sed -i '1d' /etc/pacman.d/antergos-mirrorlist
fi

}



run_when_connected > /tmp/pacman-boot.log 2>&1 && \
{ if [[ -f /tmp/.setup-running ]]; then 
	exit 0;
else
	sudo killall -s 15 -w python; start_cnchi
fi; } && exit 0


exit 1;
